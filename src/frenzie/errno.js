/**
 * @file src/frenzie/errno.js
 * @description Contains errno definitions parsed from libuv, linux kernel, and c-ares.
 * @license MIT
 * @copyright 2018-present Karim Alibhai.
 */

// AUTOGENERATED - DO NOT EDIT
// Updated at: Thu, 29 Mar 2018 20:36:02 GMT

/**
 * Could not find GetNetworkParams function
 */
export const ARES_EADDRGETNETWORKPARAMS = {
  "code": "ARES_EADDRGETNETWORKPARAMS",
  "errno": 23,
  "description": "Could not find GetNetworkParams function"
}

/**
 * Unsupported address family
 */
export const ARES_EBADFAMILY = {
  "code": "ARES_EBADFAMILY",
  "errno": 9,
  "description": "Unsupported address family"
}

/**
 * Illegal flags specified
 */
export const ARES_EBADFLAGS = {
  "code": "ARES_EBADFLAGS",
  "errno": 18,
  "description": "Illegal flags specified"
}

/**
 * Illegal hints flags specified
 */
export const ARES_EBADHINTS = {
  "code": "ARES_EBADHINTS",
  "errno": 20,
  "description": "Illegal hints flags specified"
}

/**
 * Misformatted domain name
 */
export const ARES_EBADNAME = {
  "code": "ARES_EBADNAME",
  "errno": 8,
  "description": "Misformatted domain name"
}

/**
 * Misformatted DNS query
 */
export const ARES_EBADQUERY = {
  "code": "ARES_EBADQUERY",
  "errno": 7,
  "description": "Misformatted DNS query"
}

/**
 * Misformatted DNS reply
 */
export const ARES_EBADRESP = {
  "code": "ARES_EBADRESP",
  "errno": 10,
  "description": "Misformatted DNS reply"
}

/**
 * Misformatted string
 */
export const ARES_EBADSTR = {
  "code": "ARES_EBADSTR",
  "errno": 17,
  "description": "Misformatted string"
}

/**
 * DNS query cancelled
 */
export const ARES_ECANCELLED = {
  "code": "ARES_ECANCELLED",
  "errno": 24,
  "description": "DNS query cancelled"
}

/**
 * Could not contact DNS servers
 */
export const ARES_ECONNREFUSED = {
  "code": "ARES_ECONNREFUSED",
  "errno": 11,
  "description": "Could not contact DNS servers"
}

/**
 * Channel is being destroyed
 */
export const ARES_EDESTRUCTION = {
  "code": "ARES_EDESTRUCTION",
  "errno": 16,
  "description": "Channel is being destroyed"
}

/**
 * Error reading file
 */
export const ARES_EFILE = {
  "code": "ARES_EFILE",
  "errno": 14,
  "description": "Error reading file"
}

/**
 * DNS server claims query was misformatted
 */
export const ARES_EFORMERR = {
  "code": "ARES_EFORMERR",
  "errno": 2,
  "description": "DNS server claims query was misformatted"
}

/**
 * Error loading iphlpapi.dll
 */
export const ARES_ELOADIPHLPAPI = {
  "code": "ARES_ELOADIPHLPAPI",
  "errno": 22,
  "description": "Error loading iphlpapi.dll"
}

/**
 * DNS server returned answer with no data
 */
export const ARES_ENODATA = {
  "code": "ARES_ENODATA",
  "errno": 1,
  "description": "DNS server returned answer with no data"
}

/**
 * Out of memory
 */
export const ARES_ENOMEM = {
  "code": "ARES_ENOMEM",
  "errno": 15,
  "description": "Out of memory"
}

/**
 * Given hostname is not numeric
 */
export const ARES_ENONAME = {
  "code": "ARES_ENONAME",
  "errno": 19,
  "description": "Given hostname is not numeric"
}

/**
 * Domain name not found
 */
export const ARES_ENOTFOUND = {
  "code": "ARES_ENOTFOUND",
  "errno": 4,
  "description": "Domain name not found"
}

/**
 * DNS server does not implement requested operation
 */
export const ARES_ENOTIMP = {
  "code": "ARES_ENOTIMP",
  "errno": 5,
  "description": "DNS server does not implement requested operation"
}

/**
 * c-ares library initialization not yet performed
 */
export const ARES_ENOTINITIALIZED = {
  "code": "ARES_ENOTINITIALIZED",
  "errno": 21,
  "description": "c-ares library initialization not yet performed"
}

/**
 * End of file
 */
export const ARES_EOF = {
  "code": "ARES_EOF",
  "errno": 13,
  "description": "End of file"
}

/**
 * DNS server refused query
 */
export const ARES_EREFUSED = {
  "code": "ARES_EREFUSED",
  "errno": 6,
  "description": "DNS server refused query"
}

/**
 * DNS server returned general failure
 */
export const ARES_ESERVFAIL = {
  "code": "ARES_ESERVFAIL",
  "errno": 3,
  "description": "DNS server returned general failure"
}

/**
 * Timeout while contacting DNS servers
 */
export const ARES_ETIMEOUT = {
  "code": "ARES_ETIMEOUT",
  "errno": 12,
  "description": "Timeout while contacting DNS servers"
}

/**
 * Argument list too long 
 */
export const E2BIG = {
  "code": "E2BIG",
  "description": "Argument list too long ",
  "errno": -7,
  "winErrno": -4093
}

/**
 * Permission denied 
 */
export const EACCES = {
  "code": "EACCES",
  "description": "Permission denied ",
  "errno": -13,
  "winErrno": -4092
}

/**
 * Address already in use 
 */
export const EADDRINUSE = {
  "code": "EADDRINUSE",
  "description": "Address already in use ",
  "errno": -48,
  "winErrno": -4091
}

/**
 * Can't assign requested address 
 */
export const EADDRNOTAVAIL = {
  "code": "EADDRNOTAVAIL",
  "description": "Can't assign requested address ",
  "errno": -49,
  "winErrno": -4090
}

/**
 * Address family not supported by protocol family 
 */
export const EAFNOSUPPORT = {
  "code": "EAFNOSUPPORT",
  "description": "Address family not supported by protocol family ",
  "errno": -47,
  "winErrno": -4089
}

/**
 * Resource temporarily unavailable 
 */
export const EAGAIN = {
  "code": "EAGAIN",
  "description": "Resource temporarily unavailable ",
  "errno": -35,
  "winErrno": -4088
}

/**
 * address family not supported
 */
export const EAI_ADDRFAMILY = {
  "code": "EAI_ADDRFAMILY",
  "description": "address family not supported",
  "errno": -3000
}

/**
 * temporary failure
 */
export const EAI_AGAIN = {
  "code": "EAI_AGAIN",
  "description": "temporary failure",
  "errno": -3001
}

/**
 * bad ai_flags value
 */
export const EAI_BADFLAGS = {
  "code": "EAI_BADFLAGS",
  "description": "bad ai_flags value",
  "errno": -3002
}

/**
 * invalid value for hints
 */
export const EAI_BADHINTS = {
  "code": "EAI_BADHINTS",
  "description": "invalid value for hints",
  "errno": -3013
}

/**
 * request canceled
 */
export const EAI_CANCELED = {
  "code": "EAI_CANCELED",
  "description": "request canceled",
  "errno": -3003
}

/**
 * permanent failure
 */
export const EAI_FAIL = {
  "code": "EAI_FAIL",
  "description": "permanent failure",
  "errno": -3004
}

/**
 * ai_family not supported
 */
export const EAI_FAMILY = {
  "code": "EAI_FAMILY",
  "description": "ai_family not supported",
  "errno": -3005
}

/**
 * ENOTFOUND
 */
export const EAI_MEMORY = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * ENOTFOUND
 */
export const EAI_NODATA = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * ENOTFOUND
 */
export const EAI_NONAME = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * argument buffer overflow
 */
export const EAI_OVERFLOW = {
  "code": "EAI_OVERFLOW",
  "description": "argument buffer overflow",
  "errno": -3009
}

/**
 * resolved protocol is unknown
 */
export const EAI_PROTOCOL = {
  "code": "EAI_PROTOCOL",
  "description": "resolved protocol is unknown",
  "errno": -3014
}

/**
 * service not available for socket type
 */
export const EAI_SERVICE = {
  "code": "EAI_SERVICE",
  "description": "service not available for socket type",
  "errno": -3010
}

/**
 * socket type not supported
 */
export const EAI_SOCKTYPE = {
  "code": "EAI_SOCKTYPE",
  "description": "socket type not supported",
  "errno": -3011
}

/**
 * Operation already in progress 
 */
export const EALREADY = {
  "code": "EALREADY",
  "description": "Operation already in progress ",
  "errno": -37,
  "winErrno": -4084
}

/**
 * Authentication error 
 */
export const EAUTH = {
  "code": "EAUTH",
  "errno": -80,
  "description": "Authentication error "
}

/**
 * Bad CPU type in executable 
 */
export const EBADARCH = {
  "code": "EBADARCH",
  "errno": -86,
  "description": "Bad CPU type in executable "
}

/**
 * Bad executable 
 */
export const EBADEXEC = {
  "code": "EBADEXEC",
  "errno": -85,
  "description": "Bad executable "
}

/**
 * Bad file descriptor 
 */
export const EBADF = {
  "code": "EBADF",
  "description": "Bad file descriptor ",
  "errno": -9,
  "winErrno": -4083
}

/**
 * Malformed Macho file 
 */
export const EBADMACHO = {
  "code": "EBADMACHO",
  "errno": -88,
  "description": "Malformed Macho file "
}

/**
 * Bad message 
 */
export const EBADMSG = {
  "code": "EBADMSG",
  "errno": -94,
  "description": "Bad message "
}

/**
 * RPC struct is bad 
 */
export const EBADRPC = {
  "code": "EBADRPC",
  "errno": -72,
  "description": "RPC struct is bad "
}

/**
 * Device / Resource busy 
 */
export const EBUSY = {
  "code": "EBUSY",
  "description": "Device / Resource busy ",
  "errno": -16,
  "winErrno": -4082
}

/**
 * Operation canceled 
 */
export const ECANCELED = {
  "code": "ECANCELED",
  "description": "Operation canceled ",
  "errno": -89,
  "winErrno": -4081
}

/**
 * invalid Unicode character
 */
export const ECHARSET = {
  "code": "ECHARSET",
  "description": "invalid Unicode character",
  "winErrno": -4080,
  "errno": -4080
}

/**
 * No child processes 
 */
export const ECHILD = {
  "code": "ECHILD",
  "errno": -10,
  "description": "No child processes "
}

/**
 * Software caused connection abort 
 */
export const ECONNABORTED = {
  "code": "ECONNABORTED",
  "description": "Software caused connection abort ",
  "errno": -53,
  "winErrno": -4079
}

/**
 * Connection refused 
 */
export const ECONNREFUSED = {
  "code": "ECONNREFUSED",
  "description": "Connection refused ",
  "errno": -61,
  "winErrno": -4078
}

/**
 * Connection reset by peer 
 */
export const ECONNRESET = {
  "code": "ECONNRESET",
  "description": "Connection reset by peer ",
  "errno": -54,
  "winErrno": -4077
}

/**
 * Resource deadlock avoided 
 */
export const EDEADLK = {
  "code": "EDEADLK",
  "errno": -11,
  "description": "Resource deadlock avoided "
}

/**
 * Destination address required 
 */
export const EDESTADDRREQ = {
  "code": "EDESTADDRREQ",
  "description": "Destination address required ",
  "errno": -39,
  "winErrno": -4076
}

/**
 * Device error, e.g. paper out 
 */
export const EDEVERR = {
  "code": "EDEVERR",
  "errno": -83,
  "description": "Device error, e.g. paper out "
}

/**
 * Numerical argument out of domain 
 */
export const EDOM = {
  "code": "EDOM",
  "errno": -33,
  "description": "Numerical argument out of domain "
}

/**
 * Disc quota exceeded 
 */
export const EDQUOT = {
  "code": "EDQUOT",
  "errno": -69,
  "description": "Disc quota exceeded "
}

/**
 * File exists 
 */
export const EEXIST = {
  "code": "EEXIST",
  "description": "File exists ",
  "errno": -17,
  "winErrno": -4075
}

/**
 * Bad address 
 */
export const EFAULT = {
  "code": "EFAULT",
  "description": "Bad address ",
  "errno": -14,
  "winErrno": -4074
}

/**
 * File too large 
 */
export const EFBIG = {
  "code": "EFBIG",
  "description": "File too large ",
  "errno": -27,
  "winErrno": -4036
}

/**
 * Inappropriate file type or format 
 */
export const EFTYPE = {
  "code": "EFTYPE",
  "errno": -79,
  "description": "Inappropriate file type or format "
}

/**
 * Host is down 
 */
export const EHOSTDOWN = {
  "code": "EHOSTDOWN",
  "description": "Host is down ",
  "errno": -64,
  "winErrno": -4031
}

/**
 * No route to host 
 */
export const EHOSTUNREACH = {
  "code": "EHOSTUNREACH",
  "description": "No route to host ",
  "errno": -65,
  "winErrno": -4073
}

/**
 * Identifier removed 
 */
export const EIDRM = {
  "code": "EIDRM",
  "errno": -90,
  "description": "Identifier removed "
}

/**
 * Illegal byte sequence 
 */
export const EILSEQ = {
  "code": "EILSEQ",
  "errno": -92,
  "description": "Illegal byte sequence "
}

/**
 * Operation now in progress 
 */
export const EINPROGRESS = {
  "code": "EINPROGRESS",
  "errno": -36,
  "description": "Operation now in progress "
}

/**
 * Interrupted system call 
 */
export const EINTR = {
  "code": "EINTR",
  "description": "Interrupted system call ",
  "errno": -4,
  "winErrno": -4072
}

/**
 * Invalid argument 
 */
export const EINVAL = {
  "code": "EINVAL",
  "description": "Invalid argument ",
  "errno": -22,
  "winErrno": -4071
}

/**
 * Input/output error 
 */
export const EIO = {
  "code": "EIO",
  "description": "Input/output error ",
  "errno": -5,
  "winErrno": -4070
}

/**
 * Socket is already connected 
 */
export const EISCONN = {
  "code": "EISCONN",
  "description": "Socket is already connected ",
  "errno": -56,
  "winErrno": -4069
}

/**
 * Is a directory 
 */
export const EISDIR = {
  "code": "EISDIR",
  "description": "Is a directory ",
  "errno": -21,
  "winErrno": -4068
}

/**
 * Must be equal largest errno 
 */
export const ELAST = {
  "code": "ELAST",
  "errno": -106,
  "description": "Must be equal largest errno "
}

/**
 * Too many levels of symbolic links 
 */
export const ELOOP = {
  "code": "ELOOP",
  "description": "Too many levels of symbolic links ",
  "errno": -62,
  "winErrno": -4067
}

/**
 * Too many open files 
 */
export const EMFILE = {
  "code": "EMFILE",
  "description": "Too many open files ",
  "errno": -24,
  "winErrno": -4066
}

/**
 * Too many links 
 */
export const EMLINK = {
  "code": "EMLINK",
  "description": "Too many links ",
  "errno": -31,
  "winErrno": -4032
}

/**
 * Message too long 
 */
export const EMSGSIZE = {
  "code": "EMSGSIZE",
  "description": "Message too long ",
  "errno": -40,
  "winErrno": -4065
}

/**
 * Reserved 
 */
export const EMULTIHOP = {
  "code": "EMULTIHOP",
  "errno": -95,
  "description": "Reserved "
}

/**
 * File name too long 
 */
export const ENAMETOOLONG = {
  "code": "ENAMETOOLONG",
  "description": "File name too long ",
  "errno": -63,
  "winErrno": -4064
}

/**
 * Need authenticator 
 */
export const ENEEDAUTH = {
  "code": "ENEEDAUTH",
  "errno": -81,
  "description": "Need authenticator "
}

/**
 * Network is down 
 */
export const ENETDOWN = {
  "code": "ENETDOWN",
  "description": "Network is down ",
  "errno": -50,
  "winErrno": -4063
}

/**
 * Network dropped connection on reset 
 */
export const ENETRESET = {
  "code": "ENETRESET",
  "errno": -52,
  "description": "Network dropped connection on reset "
}

/**
 * Network is unreachable 
 */
export const ENETUNREACH = {
  "code": "ENETUNREACH",
  "description": "Network is unreachable ",
  "errno": -51,
  "winErrno": -4062
}

/**
 * Too many open files in system 
 */
export const ENFILE = {
  "code": "ENFILE",
  "description": "Too many open files in system ",
  "errno": -23,
  "winErrno": -4061
}

/**
 * Attribute not found 
 */
export const ENOATTR = {
  "code": "ENOATTR",
  "errno": -93,
  "description": "Attribute not found "
}

/**
 * No buffer space available 
 */
export const ENOBUFS = {
  "code": "ENOBUFS",
  "description": "No buffer space available ",
  "errno": -55,
  "winErrno": -4060
}

/**
 * No message available on STREAM 
 */
export const ENODATA = {
  "code": "ENODATA",
  "errno": -96,
  "description": "No message available on STREAM "
}

/**
 * Operation not supported by device 
 */
export const ENODEV = {
  "code": "ENODEV",
  "description": "Operation not supported by device ",
  "errno": -19,
  "winErrno": -4059
}

/**
 * No such file or directory 
 */
export const ENOENT = {
  "code": "ENOENT",
  "description": "No such file or directory ",
  "errno": -2,
  "winErrno": -4058
}

/**
 * Exec format error 
 */
export const ENOEXEC = {
  "code": "ENOEXEC",
  "errno": -8,
  "description": "Exec format error "
}

/**
 * No locks available 
 */
export const ENOLCK = {
  "code": "ENOLCK",
  "errno": -77,
  "description": "No locks available "
}

/**
 * Reserved 
 */
export const ENOLINK = {
  "code": "ENOLINK",
  "errno": -97,
  "description": "Reserved "
}

/**
 * Cannot allocate memory 
 */
export const ENOMEM = {
  "code": "ENOMEM",
  "description": "Cannot allocate memory ",
  "errno": -12,
  "winErrno": -4057
}

/**
 * No message of desired type 
 */
export const ENOMSG = {
  "code": "ENOMSG",
  "errno": -91,
  "description": "No message of desired type "
}

/**
 * machine is not on the network
 */
export const ENONET = {
  "code": "ENONET",
  "description": "machine is not on the network",
  "winErrno": -4056,
  "errno": -4056
}

/**
 * No such policy registered 
 */
export const ENOPOLICY = {
  "code": "ENOPOLICY",
  "errno": -103,
  "description": "No such policy registered "
}

/**
 * Protocol not available 
 */
export const ENOPROTOOPT = {
  "code": "ENOPROTOOPT",
  "description": "Protocol not available ",
  "errno": -42,
  "winErrno": -4035
}

/**
 * No space left on device 
 */
export const ENOSPC = {
  "code": "ENOSPC",
  "description": "No space left on device ",
  "errno": -28,
  "winErrno": -4055
}

/**
 * No STREAM resources 
 */
export const ENOSR = {
  "code": "ENOSR",
  "errno": -98,
  "description": "No STREAM resources "
}

/**
 * Not a STREAM 
 */
export const ENOSTR = {
  "code": "ENOSTR",
  "errno": -99,
  "description": "Not a STREAM "
}

/**
 * Function not implemented 
 */
export const ENOSYS = {
  "code": "ENOSYS",
  "description": "Function not implemented ",
  "errno": -78,
  "winErrno": -4054
}

/**
 * Block device required 
 */
export const ENOTBLK = {
  "code": "ENOTBLK",
  "errno": -15,
  "description": "Block device required "
}

/**
 * Socket is not connected 
 */
export const ENOTCONN = {
  "code": "ENOTCONN",
  "description": "Socket is not connected ",
  "errno": -57,
  "winErrno": -4053
}

/**
 * Not a directory 
 */
export const ENOTDIR = {
  "code": "ENOTDIR",
  "description": "Not a directory ",
  "errno": -20,
  "winErrno": -4052
}

/**
 * Directory not empty 
 */
export const ENOTEMPTY = {
  "code": "ENOTEMPTY",
  "description": "Directory not empty ",
  "errno": -66,
  "winErrno": -4051
}

/**
 * ENOTFOUND
 */
export const ENOTFOUND = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * State not recoverable 
 */
export const ENOTRECOVERABLE = {
  "code": "ENOTRECOVERABLE",
  "errno": -104,
  "description": "State not recoverable "
}

/**
 * Socket operation on non-socket 
 */
export const ENOTSOCK = {
  "code": "ENOTSOCK",
  "description": "Socket operation on non-socket ",
  "errno": -38,
  "winErrno": -4050
}

/**
 * Operation not supported 
 */
export const ENOTSUP = {
  "code": "ENOTSUP",
  "description": "Operation not supported ",
  "errno": -45,
  "winErrno": -4049
}

/**
 * Inappropriate ioctl for device 
 */
export const ENOTTY = {
  "code": "ENOTTY",
  "description": "Inappropriate ioctl for device ",
  "errno": -25,
  "winErrno": -4029
}

/**
 * Device not configured 
 */
export const ENXIO = {
  "code": "ENXIO",
  "description": "Device not configured ",
  "errno": -6,
  "winErrno": -4033
}

/**
 * end of file
 */
export const EOF = {
  "code": "EOF",
  "description": "end of file",
  "errno": -4095
}

/**
 * Operation not supported on socket 
 */
export const EOPNOTSUPP = {
  "code": "EOPNOTSUPP",
  "errno": -102,
  "description": "Operation not supported on socket "
}

/**
 * Value too large to be stored in data type 
 */
export const EOVERFLOW = {
  "code": "EOVERFLOW",
  "errno": -84,
  "description": "Value too large to be stored in data type "
}

/**
 * Previous owner died 
 */
export const EOWNERDEAD = {
  "code": "EOWNERDEAD",
  "errno": -105,
  "description": "Previous owner died "
}

/**
 * Operation not permitted 
 */
export const EPERM = {
  "code": "EPERM",
  "description": "Operation not permitted ",
  "errno": -1,
  "winErrno": -4048
}

/**
 * Protocol family not supported 
 */
export const EPFNOSUPPORT = {
  "code": "EPFNOSUPPORT",
  "errno": -46,
  "description": "Protocol family not supported "
}

/**
 * Broken pipe 
 */
export const EPIPE = {
  "code": "EPIPE",
  "description": "Broken pipe ",
  "errno": -32,
  "winErrno": -4047
}

/**
 * Too many processes 
 */
export const EPROCLIM = {
  "code": "EPROCLIM",
  "errno": -67,
  "description": "Too many processes "
}

/**
 * Bad procedure for program 
 */
export const EPROCUNAVAIL = {
  "code": "EPROCUNAVAIL",
  "errno": -76,
  "description": "Bad procedure for program "
}

/**
 * Program version wrong 
 */
export const EPROGMISMATCH = {
  "code": "EPROGMISMATCH",
  "errno": -75,
  "description": "Program version wrong "
}

/**
 * RPC prog. not avail 
 */
export const EPROGUNAVAIL = {
  "code": "EPROGUNAVAIL",
  "errno": -74,
  "description": "RPC prog. not avail "
}

/**
 * Protocol error 
 */
export const EPROTO = {
  "code": "EPROTO",
  "description": "Protocol error ",
  "errno": -100
}

/**
 * Protocol not supported 
 */
export const EPROTONOSUPPORT = {
  "code": "EPROTONOSUPPORT",
  "description": "Protocol not supported ",
  "errno": -43,
  "winErrno": -4045
}

/**
 * Protocol wrong type for socket 
 */
export const EPROTOTYPE = {
  "code": "EPROTOTYPE",
  "description": "Protocol wrong type for socket ",
  "errno": -41,
  "winErrno": -4044
}

/**
 * Device power is off 
 */
export const EPWROFF = {
  "code": "EPWROFF",
  "errno": -82,
  "description": "Device power is off "
}

/**
 * Interface output queue is full 
 */
export const EQFULL = {
  "code": "EQFULL",
  "errno": -106,
  "description": "Interface output queue is full "
}

/**
 * Result too large 
 */
export const ERANGE = {
  "code": "ERANGE",
  "description": "Result too large ",
  "errno": -34,
  "winErrno": -4034
}

/**
 * Too many levels of remote in path 
 */
export const EREMOTE = {
  "code": "EREMOTE",
  "errno": -71,
  "description": "Too many levels of remote in path "
}

/**
 * remote I/O error
 */
export const EREMOTEIO = {
  "code": "EREMOTEIO",
  "description": "remote I/O error",
  "winErrno": -4030,
  "errno": -4030
}

/**
 * Read-only file system 
 */
export const EROFS = {
  "code": "EROFS",
  "description": "Read-only file system ",
  "errno": -30,
  "winErrno": -4043
}

/**
 * RPC version wrong 
 */
export const ERPCMISMATCH = {
  "code": "ERPCMISMATCH",
  "errno": -73,
  "description": "RPC version wrong "
}

/**
 * Shared library version mismatch 
 */
export const ESHLIBVERS = {
  "code": "ESHLIBVERS",
  "errno": -87,
  "description": "Shared library version mismatch "
}

/**
 * Can't send after socket shutdown 
 */
export const ESHUTDOWN = {
  "code": "ESHUTDOWN",
  "description": "Can't send after socket shutdown ",
  "errno": -58,
  "winErrno": -4042
}

/**
 * Socket type not supported 
 */
export const ESOCKTNOSUPPORT = {
  "code": "ESOCKTNOSUPPORT",
  "errno": -44,
  "description": "Socket type not supported "
}

/**
 * Illegal seek 
 */
export const ESPIPE = {
  "code": "ESPIPE",
  "description": "Illegal seek ",
  "errno": -29,
  "winErrno": -4041
}

/**
 * No such process 
 */
export const ESRCH = {
  "code": "ESRCH",
  "description": "No such process ",
  "errno": -3,
  "winErrno": -4040
}

/**
 * Stale NFS file handle 
 */
export const ESTALE = {
  "code": "ESTALE",
  "errno": -70,
  "description": "Stale NFS file handle "
}

/**
 * STREAM ioctl timeout 
 */
export const ETIME = {
  "code": "ETIME",
  "errno": -101,
  "description": "STREAM ioctl timeout "
}

/**
 * Operation timed out 
 */
export const ETIMEDOUT = {
  "code": "ETIMEDOUT",
  "description": "Operation timed out ",
  "errno": -60,
  "winErrno": -4039
}

/**
 * Too many references: can't splice 
 */
export const ETOOMANYREFS = {
  "code": "ETOOMANYREFS",
  "errno": -59,
  "description": "Too many references: can't splice "
}

/**
 * Text file busy 
 */
export const ETXTBSY = {
  "code": "ETXTBSY",
  "description": "Text file busy ",
  "errno": -26,
  "winErrno": -4038
}

/**
 * Too many users 
 */
export const EUSERS = {
  "code": "EUSERS",
  "errno": -68,
  "description": "Too many users "
}

/**
 * Cross-device link 
 */
export const EXDEV = {
  "code": "EXDEV",
  "description": "Cross-device link ",
  "errno": -18,
  "winErrno": -4037
}
