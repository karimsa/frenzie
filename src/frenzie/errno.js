// autogenerated - do not edit

        /**
         * argument list too long
         */
        export const E2BIG = {
  "code": "E2BIG",
  "description": "argument list too long",
  "errno": "E2BIG"
}
        


        /**
         * permission denied
         */
        export const EACCES = {
  "code": "EACCES",
  "description": "permission denied",
  "errno": "EACCES"
}
        


        /**
         * address already in use
         */
        export const EADDRINUSE = {
  "code": "EADDRINUSE",
  "description": "address already in use",
  "errno": "EADDRINUSE"
}
        


        /**
         * address not available
         */
        export const EADDRNOTAVAIL = {
  "code": "EADDRNOTAVAIL",
  "description": "address not available",
  "errno": "EADDRNOTAVAIL"
}
        


        /**
         * address family not supported
         */
        export const EAFNOSUPPORT = {
  "code": "EAFNOSUPPORT",
  "description": "address family not supported",
  "errno": "EAFNOSUPPORT"
}
        


        /**
         * resource temporarily unavailable
         */
        export const EAGAIN = {
  "code": "EAGAIN",
  "description": "resource temporarily unavailable",
  "errno": "EAGAIN"
}
        


        /**
         * address family not supported
         */
        export const EAI_ADDRFAMILY = {
  "code": "EAI_ADDRFAMILY",
  "description": "address family not supported",
  "errno": -3000
}
        


        /**
         * temporary failure
         */
        export const EAI_AGAIN = {
  "code": "EAI_AGAIN",
  "description": "temporary failure",
  "errno": -3001
}
        


        /**
         * bad ai_flags value
         */
        export const EAI_BADFLAGS = {
  "code": "EAI_BADFLAGS",
  "description": "bad ai_flags value",
  "errno": -3002
}
        


        /**
         * invalid value for hints
         */
        export const EAI_BADHINTS = {
  "code": "EAI_BADHINTS",
  "description": "invalid value for hints",
  "errno": -3013
}
        


        /**
         * request canceled
         */
        export const EAI_CANCELED = {
  "code": "EAI_CANCELED",
  "description": "request canceled",
  "errno": -3003
}
        


        /**
         * permanent failure
         */
        export const EAI_FAIL = {
  "code": "EAI_FAIL",
  "description": "permanent failure",
  "errno": -3004
}
        


        /**
         * ai_family not supported
         */
        export const EAI_FAMILY = {
  "code": "EAI_FAMILY",
  "description": "ai_family not supported",
  "errno": -3005
}
        


        /**
         * ENOTFOUND
         */
        export const EAI_MEMORY = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}
        


        /**
         * ENOTFOUND
         */
        export const EAI_NODATA = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}
        


        /**
         * ENOTFOUND
         */
        export const EAI_NONAME = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}
        


        /**
         * argument buffer overflow
         */
        export const EAI_OVERFLOW = {
  "code": "EAI_OVERFLOW",
  "description": "argument buffer overflow",
  "errno": -3009
}
        


        /**
         * resolved protocol is unknown
         */
        export const EAI_PROTOCOL = {
  "code": "EAI_PROTOCOL",
  "description": "resolved protocol is unknown",
  "errno": -3014
}
        


        /**
         * service not available for socket type
         */
        export const EAI_SERVICE = {
  "code": "EAI_SERVICE",
  "description": "service not available for socket type",
  "errno": -3010
}
        


        /**
         * socket type not supported
         */
        export const EAI_SOCKTYPE = {
  "code": "EAI_SOCKTYPE",
  "description": "socket type not supported",
  "errno": -3011
}
        


        /**
         * connection already in progress
         */
        export const EALREADY = {
  "code": "EALREADY",
  "description": "connection already in progress",
  "errno": "EALREADY"
}
        


        /**
         * bad file descriptor
         */
        export const EBADF = {
  "code": "EBADF",
  "description": "bad file descriptor",
  "errno": "EBADF"
}
        


        /**
         * resource busy or locked
         */
        export const EBUSY = {
  "code": "EBUSY",
  "description": "resource busy or locked",
  "errno": "EBUSY"
}
        


        /**
         * operation canceled
         */
        export const ECANCELED = {
  "code": "ECANCELED",
  "description": "operation canceled",
  "errno": "ECANCELED"
}
        


        /**
         * invalid Unicode character
         */
        export const ECHARSET = {
  "code": "ECHARSET",
  "description": "invalid Unicode character",
  "errno": "ECHARSET"
}
        


        /**
         * software caused connection abort
         */
        export const ECONNABORTED = {
  "code": "ECONNABORTED",
  "description": "software caused connection abort",
  "errno": "ECONNABORTED"
}
        


        /**
         * connection refused
         */
        export const ECONNREFUSED = {
  "code": "ECONNREFUSED",
  "description": "connection refused",
  "errno": "ECONNREFUSED"
}
        


        /**
         * connection reset by peer
         */
        export const ECONNRESET = {
  "code": "ECONNRESET",
  "description": "connection reset by peer",
  "errno": "ECONNRESET"
}
        


        /**
         * destination address required
         */
        export const EDESTADDRREQ = {
  "code": "EDESTADDRREQ",
  "description": "destination address required",
  "errno": "EDESTADDRREQ"
}
        


        /**
         * file already exists
         */
        export const EEXIST = {
  "code": "EEXIST",
  "description": "file already exists",
  "errno": "EEXIST"
}
        


        /**
         * bad address in system call argument
         */
        export const EFAULT = {
  "code": "EFAULT",
  "description": "bad address in system call argument",
  "errno": "EFAULT"
}
        


        /**
         * file too large
         */
        export const EFBIG = {
  "code": "EFBIG",
  "description": "file too large",
  "errno": "EFBIG"
}
        


        /**
         * host is unreachable
         */
        export const EHOSTUNREACH = {
  "code": "EHOSTUNREACH",
  "description": "host is unreachable",
  "errno": "EHOSTUNREACH"
}
        


        /**
         * interrupted system call
         */
        export const EINTR = {
  "code": "EINTR",
  "description": "interrupted system call",
  "errno": "EINTR"
}
        


        /**
         * invalid argument
         */
        export const EINVAL = {
  "code": "EINVAL",
  "description": "invalid argument",
  "errno": "EINVAL"
}
        


        /**
         * i/o error
         */
        export const EIO = {
  "code": "EIO",
  "description": "i/o error",
  "errno": "EIO"
}
        


        /**
         * socket is already connected
         */
        export const EISCONN = {
  "code": "EISCONN",
  "description": "socket is already connected",
  "errno": "EISCONN"
}
        


        /**
         * illegal operation on a directory
         */
        export const EISDIR = {
  "code": "EISDIR",
  "description": "illegal operation on a directory",
  "errno": "EISDIR"
}
        


        /**
         * too many symbolic links encountered
         */
        export const ELOOP = {
  "code": "ELOOP",
  "description": "too many symbolic links encountered",
  "errno": "ELOOP"
}
        


        /**
         * too many open files
         */
        export const EMFILE = {
  "code": "EMFILE",
  "description": "too many open files",
  "errno": "EMFILE"
}
        


        /**
         * message too long
         */
        export const EMSGSIZE = {
  "code": "EMSGSIZE",
  "description": "message too long",
  "errno": "EMSGSIZE"
}
        


        /**
         * name too long
         */
        export const ENAMETOOLONG = {
  "code": "ENAMETOOLONG",
  "description": "name too long",
  "errno": "ENAMETOOLONG"
}
        


        /**
         * network is down
         */
        export const ENETDOWN = {
  "code": "ENETDOWN",
  "description": "network is down",
  "errno": "ENETDOWN"
}
        


        /**
         * network is unreachable
         */
        export const ENETUNREACH = {
  "code": "ENETUNREACH",
  "description": "network is unreachable",
  "errno": "ENETUNREACH"
}
        


        /**
         * file table overflow
         */
        export const ENFILE = {
  "code": "ENFILE",
  "description": "file table overflow",
  "errno": "ENFILE"
}
        


        /**
         * no buffer space available
         */
        export const ENOBUFS = {
  "code": "ENOBUFS",
  "description": "no buffer space available",
  "errno": "ENOBUFS"
}
        


        /**
         * no such device
         */
        export const ENODEV = {
  "code": "ENODEV",
  "description": "no such device",
  "errno": "ENODEV"
}
        


        /**
         * no such file or directory
         */
        export const ENOENT = {
  "code": "ENOENT",
  "description": "no such file or directory",
  "errno": "ENOENT"
}
        


        /**
         * not enough memory
         */
        export const ENOMEM = {
  "code": "ENOMEM",
  "description": "not enough memory",
  "errno": "ENOMEM"
}
        


        /**
         * machine is not on the network
         */
        export const ENONET = {
  "code": "ENONET",
  "description": "machine is not on the network",
  "errno": "ENONET"
}
        


        /**
         * protocol not available
         */
        export const ENOPROTOOPT = {
  "code": "ENOPROTOOPT",
  "description": "protocol not available",
  "errno": "ENOPROTOOPT"
}
        


        /**
         * no space left on device
         */
        export const ENOSPC = {
  "code": "ENOSPC",
  "description": "no space left on device",
  "errno": "ENOSPC"
}
        


        /**
         * function not implemented
         */
        export const ENOSYS = {
  "code": "ENOSYS",
  "description": "function not implemented",
  "errno": "ENOSYS"
}
        


        /**
         * socket is not connected
         */
        export const ENOTCONN = {
  "code": "ENOTCONN",
  "description": "socket is not connected",
  "errno": "ENOTCONN"
}
        


        /**
         * not a directory
         */
        export const ENOTDIR = {
  "code": "ENOTDIR",
  "description": "not a directory",
  "errno": "ENOTDIR"
}
        


        /**
         * directory not empty
         */
        export const ENOTEMPTY = {
  "code": "ENOTEMPTY",
  "description": "directory not empty",
  "errno": "ENOTEMPTY"
}
        


        /**
         * socket operation on non-socket
         */
        export const ENOTSOCK = {
  "code": "ENOTSOCK",
  "description": "socket operation on non-socket",
  "errno": "ENOTSOCK"
}
        


        /**
         * operation not supported on socket
         */
        export const ENOTSUP = {
  "code": "ENOTSUP",
  "description": "operation not supported on socket",
  "errno": "ENOTSUP"
}
        


        /**
         * operation not permitted
         */
        export const EPERM = {
  "code": "EPERM",
  "description": "operation not permitted",
  "errno": "EPERM"
}
        


        /**
         * broken pipe
         */
        export const EPIPE = {
  "code": "EPIPE",
  "description": "broken pipe",
  "errno": "EPIPE"
}
        


        /**
         * protocol error
         */
        export const EPROTO = {
  "code": "EPROTO",
  "description": "protocol error",
  "errno": "EPROTO"
}
        


        /**
         * protocol not supported
         */
        export const EPROTONOSUPPORT = {
  "code": "EPROTONOSUPPORT",
  "description": "protocol not supported",
  "errno": "EPROTONOSUPPORT"
}
        


        /**
         * protocol wrong type for socket
         */
        export const EPROTOTYPE = {
  "code": "EPROTOTYPE",
  "description": "protocol wrong type for socket",
  "errno": "EPROTOTYPE"
}
        


        /**
         * result too large
         */
        export const ERANGE = {
  "code": "ERANGE",
  "description": "result too large",
  "errno": "ERANGE"
}
        


        /**
         * read-only file system
         */
        export const EROFS = {
  "code": "EROFS",
  "description": "read-only file system",
  "errno": "EROFS"
}
        


        /**
         * cannot send after transport endpoint shutdown
         */
        export const ESHUTDOWN = {
  "code": "ESHUTDOWN",
  "description": "cannot send after transport endpoint shutdown",
  "errno": "ESHUTDOWN"
}
        


        /**
         * invalid seek
         */
        export const ESPIPE = {
  "code": "ESPIPE",
  "description": "invalid seek",
  "errno": "ESPIPE"
}
        


        /**
         * no such process
         */
        export const ESRCH = {
  "code": "ESRCH",
  "description": "no such process",
  "errno": "ESRCH"
}
        


        /**
         * connection timed out
         */
        export const ETIMEDOUT = {
  "code": "ETIMEDOUT",
  "description": "connection timed out",
  "errno": "ETIMEDOUT"
}
        


        /**
         * text file is busy
         */
        export const ETXTBSY = {
  "code": "ETXTBSY",
  "description": "text file is busy",
  "errno": "ETXTBSY"
}
        


        /**
         * cross-device link not permitted
         */
        export const EXDEV = {
  "code": "EXDEV",
  "description": "cross-device link not permitted",
  "errno": "EXDEV"
}
        


        /**
         * end of file
         */
        export const EOF = {
  "code": "EOF",
  "description": "end of file",
  "errno": -4095
}
        


        /**
         * no such device or address
         */
        export const ENXIO = {
  "code": "ENXIO",
  "description": "no such device or address",
  "errno": "ENXIO"
}
        


        /**
         * too many links
         */
        export const EMLINK = {
  "code": "EMLINK",
  "description": "too many links",
  "errno": "EMLINK"
}
        


        /**
         * host is down
         */
        export const EHOSTDOWN = {
  "code": "EHOSTDOWN",
  "description": "host is down",
  "errno": "EHOSTDOWN"
}
        


        /**
         * remote I/O error
         */
        export const EREMOTEIO = {
  "code": "EREMOTEIO",
  "description": "remote I/O error",
  "errno": "EREMOTEIO"
}
        


        /**
         * inappropriate ioctl for device
         */
        export const ENOTTY = {
  "code": "ENOTTY",
  "description": "inappropriate ioctl for device",
  "errno": "ENOTTY"
}
        


        /**
         * ENOTFOUND
         */
        export const ENOTFOUND = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}
        