/**
 * @file src/frenzie/errno.js
 * @description Contains errno definitions parsed from libuv.
 * @license MIT
 * @copyright 2018-present Karim Alibhai.
 */

// AUTOGENERATED - DO NOT EDIT
// Updated at: Thu, 29 Mar 2018 00:15:35 GMT

/**
 * argument list too long
 */
export const E2BIG = {
  "code": "E2BIG",
  "description": "argument list too long",
  "errno": -4093
}

/**
 * permission denied
 */
export const EACCES = {
  "code": "EACCES",
  "description": "permission denied",
  "errno": -4092
}

/**
 * address already in use
 */
export const EADDRINUSE = {
  "code": "EADDRINUSE",
  "description": "address already in use",
  "errno": -4091
}

/**
 * address not available
 */
export const EADDRNOTAVAIL = {
  "code": "EADDRNOTAVAIL",
  "description": "address not available",
  "errno": -4090
}

/**
 * address family not supported
 */
export const EAFNOSUPPORT = {
  "code": "EAFNOSUPPORT",
  "description": "address family not supported",
  "errno": -4089
}

/**
 * resource temporarily unavailable
 */
export const EAGAIN = {
  "code": "EAGAIN",
  "description": "resource temporarily unavailable",
  "errno": -4088
}

/**
 * address family not supported
 */
export const EAI_ADDRFAMILY = {
  "code": "EAI_ADDRFAMILY",
  "description": "address family not supported",
  "errno": -3000
}

/**
 * temporary failure
 */
export const EAI_AGAIN = {
  "code": "EAI_AGAIN",
  "description": "temporary failure",
  "errno": -3001
}

/**
 * bad ai_flags value
 */
export const EAI_BADFLAGS = {
  "code": "EAI_BADFLAGS",
  "description": "bad ai_flags value",
  "errno": -3002
}

/**
 * invalid value for hints
 */
export const EAI_BADHINTS = {
  "code": "EAI_BADHINTS",
  "description": "invalid value for hints",
  "errno": -3013
}

/**
 * request canceled
 */
export const EAI_CANCELED = {
  "code": "EAI_CANCELED",
  "description": "request canceled",
  "errno": -3003
}

/**
 * permanent failure
 */
export const EAI_FAIL = {
  "code": "EAI_FAIL",
  "description": "permanent failure",
  "errno": -3004
}

/**
 * ai_family not supported
 */
export const EAI_FAMILY = {
  "code": "EAI_FAMILY",
  "description": "ai_family not supported",
  "errno": -3005
}

/**
 * ENOTFOUND
 */
export const EAI_MEMORY = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * ENOTFOUND
 */
export const EAI_NODATA = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * ENOTFOUND
 */
export const EAI_NONAME = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}

/**
 * argument buffer overflow
 */
export const EAI_OVERFLOW = {
  "code": "EAI_OVERFLOW",
  "description": "argument buffer overflow",
  "errno": -3009
}

/**
 * resolved protocol is unknown
 */
export const EAI_PROTOCOL = {
  "code": "EAI_PROTOCOL",
  "description": "resolved protocol is unknown",
  "errno": -3014
}

/**
 * service not available for socket type
 */
export const EAI_SERVICE = {
  "code": "EAI_SERVICE",
  "description": "service not available for socket type",
  "errno": -3010
}

/**
 * socket type not supported
 */
export const EAI_SOCKTYPE = {
  "code": "EAI_SOCKTYPE",
  "description": "socket type not supported",
  "errno": -3011
}

/**
 * connection already in progress
 */
export const EALREADY = {
  "code": "EALREADY",
  "description": "connection already in progress",
  "errno": -4084
}

/**
 * bad file descriptor
 */
export const EBADF = {
  "code": "EBADF",
  "description": "bad file descriptor",
  "errno": -4083
}

/**
 * resource busy or locked
 */
export const EBUSY = {
  "code": "EBUSY",
  "description": "resource busy or locked",
  "errno": -4082
}

/**
 * operation canceled
 */
export const ECANCELED = {
  "code": "ECANCELED",
  "description": "operation canceled",
  "errno": -4081
}

/**
 * invalid Unicode character
 */
export const ECHARSET = {
  "code": "ECHARSET",
  "description": "invalid Unicode character",
  "errno": -4080
}

/**
 * software caused connection abort
 */
export const ECONNABORTED = {
  "code": "ECONNABORTED",
  "description": "software caused connection abort",
  "errno": -4079
}

/**
 * connection refused
 */
export const ECONNREFUSED = {
  "code": "ECONNREFUSED",
  "description": "connection refused",
  "errno": -4078
}

/**
 * connection reset by peer
 */
export const ECONNRESET = {
  "code": "ECONNRESET",
  "description": "connection reset by peer",
  "errno": -4077
}

/**
 * destination address required
 */
export const EDESTADDRREQ = {
  "code": "EDESTADDRREQ",
  "description": "destination address required",
  "errno": -4076
}

/**
 * file already exists
 */
export const EEXIST = {
  "code": "EEXIST",
  "description": "file already exists",
  "errno": -4075
}

/**
 * bad address in system call argument
 */
export const EFAULT = {
  "code": "EFAULT",
  "description": "bad address in system call argument",
  "errno": -4074
}

/**
 * file too large
 */
export const EFBIG = {
  "code": "EFBIG",
  "description": "file too large",
  "errno": -4036
}

/**
 * host is unreachable
 */
export const EHOSTUNREACH = {
  "code": "EHOSTUNREACH",
  "description": "host is unreachable",
  "errno": -4073
}

/**
 * interrupted system call
 */
export const EINTR = {
  "code": "EINTR",
  "description": "interrupted system call",
  "errno": -4072
}

/**
 * invalid argument
 */
export const EINVAL = {
  "code": "EINVAL",
  "description": "invalid argument",
  "errno": -4071
}

/**
 * i/o error
 */
export const EIO = {
  "code": "EIO",
  "description": "i/o error",
  "errno": -4070
}

/**
 * socket is already connected
 */
export const EISCONN = {
  "code": "EISCONN",
  "description": "socket is already connected",
  "errno": -4069
}

/**
 * illegal operation on a directory
 */
export const EISDIR = {
  "code": "EISDIR",
  "description": "illegal operation on a directory",
  "errno": -4068
}

/**
 * too many symbolic links encountered
 */
export const ELOOP = {
  "code": "ELOOP",
  "description": "too many symbolic links encountered",
  "errno": -4067
}

/**
 * too many open files
 */
export const EMFILE = {
  "code": "EMFILE",
  "description": "too many open files",
  "errno": -4066
}

/**
 * message too long
 */
export const EMSGSIZE = {
  "code": "EMSGSIZE",
  "description": "message too long",
  "errno": -4065
}

/**
 * name too long
 */
export const ENAMETOOLONG = {
  "code": "ENAMETOOLONG",
  "description": "name too long",
  "errno": -4064
}

/**
 * network is down
 */
export const ENETDOWN = {
  "code": "ENETDOWN",
  "description": "network is down",
  "errno": -4063
}

/**
 * network is unreachable
 */
export const ENETUNREACH = {
  "code": "ENETUNREACH",
  "description": "network is unreachable",
  "errno": -4062
}

/**
 * file table overflow
 */
export const ENFILE = {
  "code": "ENFILE",
  "description": "file table overflow",
  "errno": -4061
}

/**
 * no buffer space available
 */
export const ENOBUFS = {
  "code": "ENOBUFS",
  "description": "no buffer space available",
  "errno": -4060
}

/**
 * no such device
 */
export const ENODEV = {
  "code": "ENODEV",
  "description": "no such device",
  "errno": -4059
}

/**
 * no such file or directory
 */
export const ENOENT = {
  "code": "ENOENT",
  "description": "no such file or directory",
  "errno": -4058
}

/**
 * not enough memory
 */
export const ENOMEM = {
  "code": "ENOMEM",
  "description": "not enough memory",
  "errno": -4057
}

/**
 * machine is not on the network
 */
export const ENONET = {
  "code": "ENONET",
  "description": "machine is not on the network",
  "errno": -4056
}

/**
 * protocol not available
 */
export const ENOPROTOOPT = {
  "code": "ENOPROTOOPT",
  "description": "protocol not available",
  "errno": -4035
}

/**
 * no space left on device
 */
export const ENOSPC = {
  "code": "ENOSPC",
  "description": "no space left on device",
  "errno": -4055
}

/**
 * function not implemented
 */
export const ENOSYS = {
  "code": "ENOSYS",
  "description": "function not implemented",
  "errno": -4054
}

/**
 * socket is not connected
 */
export const ENOTCONN = {
  "code": "ENOTCONN",
  "description": "socket is not connected",
  "errno": -4053
}

/**
 * not a directory
 */
export const ENOTDIR = {
  "code": "ENOTDIR",
  "description": "not a directory",
  "errno": -4052
}

/**
 * directory not empty
 */
export const ENOTEMPTY = {
  "code": "ENOTEMPTY",
  "description": "directory not empty",
  "errno": -4051
}

/**
 * socket operation on non-socket
 */
export const ENOTSOCK = {
  "code": "ENOTSOCK",
  "description": "socket operation on non-socket",
  "errno": -4050
}

/**
 * operation not supported on socket
 */
export const ENOTSUP = {
  "code": "ENOTSUP",
  "description": "operation not supported on socket",
  "errno": -4049
}

/**
 * operation not permitted
 */
export const EPERM = {
  "code": "EPERM",
  "description": "operation not permitted",
  "errno": -4048
}

/**
 * broken pipe
 */
export const EPIPE = {
  "code": "EPIPE",
  "description": "broken pipe",
  "errno": -4047
}

/**
 * protocol error
 */
export const EPROTO = {
  "code": "EPROTO",
  "description": "protocol error",
  "errno": "EPROTO"
}

/**
 * protocol not supported
 */
export const EPROTONOSUPPORT = {
  "code": "EPROTONOSUPPORT",
  "description": "protocol not supported",
  "errno": -4045
}

/**
 * protocol wrong type for socket
 */
export const EPROTOTYPE = {
  "code": "EPROTOTYPE",
  "description": "protocol wrong type for socket",
  "errno": -4044
}

/**
 * result too large
 */
export const ERANGE = {
  "code": "ERANGE",
  "description": "result too large",
  "errno": -4034
}

/**
 * read-only file system
 */
export const EROFS = {
  "code": "EROFS",
  "description": "read-only file system",
  "errno": -4043
}

/**
 * cannot send after transport endpoint shutdown
 */
export const ESHUTDOWN = {
  "code": "ESHUTDOWN",
  "description": "cannot send after transport endpoint shutdown",
  "errno": -4042
}

/**
 * invalid seek
 */
export const ESPIPE = {
  "code": "ESPIPE",
  "description": "invalid seek",
  "errno": -4041
}

/**
 * no such process
 */
export const ESRCH = {
  "code": "ESRCH",
  "description": "no such process",
  "errno": -4040
}

/**
 * connection timed out
 */
export const ETIMEDOUT = {
  "code": "ETIMEDOUT",
  "description": "connection timed out",
  "errno": -4039
}

/**
 * text file is busy
 */
export const ETXTBSY = {
  "code": "ETXTBSY",
  "description": "text file is busy",
  "errno": -4038
}

/**
 * cross-device link not permitted
 */
export const EXDEV = {
  "code": "EXDEV",
  "description": "cross-device link not permitted",
  "errno": -4037
}

/**
 * end of file
 */
export const EOF = {
  "code": "EOF",
  "description": "end of file",
  "errno": -4095
}

/**
 * no such device or address
 */
export const ENXIO = {
  "code": "ENXIO",
  "description": "no such device or address",
  "errno": -4033
}

/**
 * too many links
 */
export const EMLINK = {
  "code": "EMLINK",
  "description": "too many links",
  "errno": -4032
}

/**
 * host is down
 */
export const EHOSTDOWN = {
  "code": "EHOSTDOWN",
  "description": "host is down",
  "errno": -4031
}

/**
 * remote I/O error
 */
export const EREMOTEIO = {
  "code": "EREMOTEIO",
  "description": "remote I/O error",
  "errno": -4030
}

/**
 * inappropriate ioctl for device
 */
export const ENOTTY = {
  "code": "ENOTTY",
  "description": "inappropriate ioctl for device",
  "errno": -4029
}

/**
 * DNS server returned answer with no data
 */
export const ARES_ENODATA = {
  "code": "ARES_ENODATA",
  "errno": 1,
  "description": "DNS server returned answer with no data"
}

/**
 * DNS server claims query was misformatted
 */
export const ARES_EFORMERR = {
  "code": "ARES_EFORMERR",
  "errno": 2,
  "description": "DNS server claims query was misformatted"
}

/**
 * DNS server returned general failure
 */
export const ARES_ESERVFAIL = {
  "code": "ARES_ESERVFAIL",
  "errno": 3,
  "description": "DNS server returned general failure"
}

/**
 * Domain name not found
 */
export const ARES_ENOTFOUND = {
  "code": "ARES_ENOTFOUND",
  "errno": 4,
  "description": "Domain name not found"
}

/**
 * DNS server does not implement requested operation
 */
export const ARES_ENOTIMP = {
  "code": "ARES_ENOTIMP",
  "errno": 5,
  "description": "DNS server does not implement requested operation"
}

/**
 * DNS server refused query
 */
export const ARES_EREFUSED = {
  "code": "ARES_EREFUSED",
  "errno": 6,
  "description": "DNS server refused query"
}

/**
 * Misformatted DNS query
 */
export const ARES_EBADQUERY = {
  "code": "ARES_EBADQUERY",
  "errno": 7,
  "description": "Misformatted DNS query"
}

/**
 * Misformatted domain name
 */
export const ARES_EBADNAME = {
  "code": "ARES_EBADNAME",
  "errno": 8,
  "description": "Misformatted domain name"
}

/**
 * Unsupported address family
 */
export const ARES_EBADFAMILY = {
  "code": "ARES_EBADFAMILY",
  "errno": 9,
  "description": "Unsupported address family"
}

/**
 * Misformatted DNS reply
 */
export const ARES_EBADRESP = {
  "code": "ARES_EBADRESP",
  "errno": 10,
  "description": "Misformatted DNS reply"
}

/**
 * Could not contact DNS servers
 */
export const ARES_ECONNREFUSED = {
  "code": "ARES_ECONNREFUSED",
  "errno": 11,
  "description": "Could not contact DNS servers"
}

/**
 * Timeout while contacting DNS servers
 */
export const ARES_ETIMEOUT = {
  "code": "ARES_ETIMEOUT",
  "errno": 12,
  "description": "Timeout while contacting DNS servers"
}

/**
 * End of file
 */
export const ARES_EOF = {
  "code": "ARES_EOF",
  "errno": 13,
  "description": "End of file"
}

/**
 * Error reading file
 */
export const ARES_EFILE = {
  "code": "ARES_EFILE",
  "errno": 14,
  "description": "Error reading file"
}

/**
 * Out of memory
 */
export const ARES_ENOMEM = {
  "code": "ARES_ENOMEM",
  "errno": 15,
  "description": "Out of memory"
}

/**
 * Channel is being destroyed
 */
export const ARES_EDESTRUCTION = {
  "code": "ARES_EDESTRUCTION",
  "errno": 16,
  "description": "Channel is being destroyed"
}

/**
 * Misformatted string
 */
export const ARES_EBADSTR = {
  "code": "ARES_EBADSTR",
  "errno": 17,
  "description": "Misformatted string"
}

/**
 * Illegal flags specified
 */
export const ARES_EBADFLAGS = {
  "code": "ARES_EBADFLAGS",
  "errno": 18,
  "description": "Illegal flags specified"
}

/**
 * Given hostname is not numeric
 */
export const ARES_ENONAME = {
  "code": "ARES_ENONAME",
  "errno": 19,
  "description": "Given hostname is not numeric"
}

/**
 * Illegal hints flags specified
 */
export const ARES_EBADHINTS = {
  "code": "ARES_EBADHINTS",
  "errno": 20,
  "description": "Illegal hints flags specified"
}

/**
 * c-ares library initialization not yet performed
 */
export const ARES_ENOTINITIALIZED = {
  "code": "ARES_ENOTINITIALIZED",
  "errno": 21,
  "description": "c-ares library initialization not yet performed"
}

/**
 * Error loading iphlpapi.dll
 */
export const ARES_ELOADIPHLPAPI = {
  "code": "ARES_ELOADIPHLPAPI",
  "errno": 22,
  "description": "Error loading iphlpapi.dll"
}

/**
 * Could not find GetNetworkParams function
 */
export const ARES_EADDRGETNETWORKPARAMS = {
  "code": "ARES_EADDRGETNETWORKPARAMS",
  "errno": 23,
  "description": "Could not find GetNetworkParams function"
}

/**
 * DNS query cancelled
 */
export const ARES_ECANCELLED = {
  "code": "ARES_ECANCELLED",
  "errno": 24,
  "description": "DNS query cancelled"
}

/**
 * ENOTFOUND
 */
export const ENOTFOUND = {
  "code": "ENOTFOUND",
  "errno": "ENOTFOUND",
  "description": "ENOTFOUND"
}
